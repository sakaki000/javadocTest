name: plusActionTest
on:
  workflow_dispatch

jobs:
   build:
      runs-on: ubuntu-latest      
      steps:
      # mainブランチをチェックアウト
      - uses: actions/checkout@v2
        with:
          ref: 'main'
          
      # javadoc専用ブランチの存在確認
      - id: check
        run: |
          git fetch
          echo "##[set-output name=branch;]$(git branch -a --format="%(refname:short)" | grep -e javadocOnly)" 

      # git configの設定
      - uses: fregante/setup-git-user@v1
      
      # javadoc専用ブランチがあればmasterのソースに更新
      - name: Check javadoc branch exist
        if: (steps.check.outputs.branch == 'origin/javadocOnly')
        run: |
          #javadoc専用ブランチをチェックアウト
          git checkout javadocOnly
          # mergeコマンドでmaserの内容を取り込む(masterの変更優先)
          git merge --allow-unrelated-histories -Xtheirs origin/main
          # mainブランチのソースをjavadoc専用ブランチにpush
          git push origin javadocOnly

      # javadoc専用ブランチがなければmasterのソースをもとに作成
      - name: Check javadoc branch not exist
        if: "!(steps.check.outputs.branch == 'origin/javadocOnly')"
        run: |
          # javadoc専用ブランチを作成
          git checkout -b javadocOnly main
          # mainブランチのソースをjavadoc専用ブランチにpush
          git push origin javadocOnly
          
      - name: Check javadoc branch not exist
        if: "!(steps.check.outputs.branch == 'origin/javadocOnly')"
        run: |
          mkdir -p ./docs
          touch ./docs/readme.txt
          git add .
          git commit -m "create docs directory"
          git push origin javadocOnly

      # JDKの設定
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          
      # Gradleへの権限付与
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      # Javadoc生成
      - name: Build Javadocs
        run: |
         ! ./gradlew javadoc 2>&1 | grep -v 'warning: \\[deprecation\\]' | grep -A 2 -e warning: -e error: ; exit $?
         cd build/docs/javadoc/
         
      # docsフォルダの内容入れ替え
      - name: Cleanup
        run: |
          rm -rf ./docs/*
          cp -r build/docs/javadoc/* ./docs/
          git add ./docs/*
          git commit -m "create docs directory"
          git push origin javadocOnly
